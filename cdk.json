{
  "app": "npx ts-node --prefer-ts-exts bin/aws-ecs.ts",
  "watch": {
    "include": [
      "**"
    ],
    "exclude": [
      "README.md",
      "cdk*.json",
      "**/*.d.ts",
      "**/*.js",
      "tsconfig.json",
      "package*.json",
      "yarn.lock",
      "node_modules",
      "test"
    ]
  },
  "versionReporting": false,
  "context":{
      "Vpc":{ 
      "project":"order",
      "cidr":"10.0.0.0/16",
      "maxaz": 2,
      "natGateway":2,
      "location":"ap-northeast-1",
      "availbiltyZones":["a","c"]
      },
      "Subnet":{
          "cidr":24,
          "public":{
              "number":1,
              "name":["alb"]
          },
          "private":{
              "number":1,
              "name":["app"]
          },
          "Isolated":{
              "number":1,
              "name":["db"]
          }
      },
      "securityPort":{
        "inboundFromNet": 80,
        "outboundServiceFromPort": 0,
        "outboundServiceToPort": 65535,
        "inboundServiceFromPort": 0,
        "inboundServiceToPort": 65535 
      },
      "cacheSettings": {
        "cacheSecurityGroupName": "RedisSecurityGroup",
        "cacheSecurityGroupDescription": "Security group for the Redis instance",
        "cacheSubnetGroupName": "RedisSubnetGroup", 
        "cacheSubnetGroupDescription": "Subnet group for the Redis instance",
        "subnet": ["order-db-a"],
        "cacheName": "myredis",  
        "cacheNodeType": "cache.t2.micro",
        "engine": "redis",
        "engineVersion": "7.0",
        "numCacheNodes": 1,
        "clusterName":  "my-redis-cluster",
        "port": 6379,
        "removalPolicy": "DESTROY",
        "snapshotRetentionLimit": 0, 
        "snapshotName":"cacheSnapshot",
        "snapshotWindow": "03:00-04:00",
        "transitEncryptionEnabled": true
      },
      "rdsSettings": {
        "subnet": ["order-db-a","order-db-c"],
        "rdsSecurityGroupName": "RdsSecurityGroup",
        "rdsSecurityGroupDescription": "Security group for the RDS instance",
        "username": "myuser",
        "password": "mypassword",
        "secretName": "DbSecret",
        "generateStringKey": "generatedPassword",
        "rdsSubnetGroupName": "DbSubnetGroup",
        "rdsSubnetGroupDescription": "Subnet group for the RDS instance",
        "rdsInstanceName": "RdsInstance",
        "removalPolicy": "DESTROY",
        "engineType": "mysql",
        "engineVersion": "8.0.34", 
        "instanceClass": "T2",
        "instanceSize": "MICRO",
        "port": 3306
      },
      "service1": {
        "clusterName": "MyCluster",
        "subnet":["order-app-c"],
        "ecsTaskExecutionRoleName": "ECSTaskExecutionRole",  
        "iamActions": ["rds:*", "elasticache:*"],             
        "iamResources": ["*"],
        "eceSecurityGroupName": "EcsSecurityGroup1",
        "eceSecurityGroupDescription": "Security group for the ECS service",
        "FargateServiceName": "FargateService1",
        "cpu": 256,
        "memory": 512,
        "desiredCounts": 1,
        "containerImage": "amazon/amazon-ecs-sample",       
        "containerName": "container1",
        "containerPort": 80,
        "publicLoadBalancer": true,
        "minCapacity": 1,
        "maxCapacity": 5,
        "targetUtilizationPercent": 50,
        "scaleInCooldown": 60,
        "scaleOutCooldown": 60,
        "healthCheckPath": "/",
        "timeout": 5,
        "healthyThresholdCount": 2,
        "interval": 10
      },
      "service2": {
        "subnet":["order-app-a"],
        "eceSecurityGroupName": "EcsSecurityGroup2",
        "eceSecurityGroupDescription": "Security group for the ECS service",
        "FargateServiceName": "FargateService2",
        "cpu": 256,
        "memory": 512,
        "desiredCounts": 1,
        "containerImage": "amazon/amazon-ecs-sample",       
        "containerName": "container2",
        "containerPort": 80,
        "publicLoadBalancer": true,
        "minCapacity": 1,
        "maxCapacity": 5,
        "targetUtilizationPercent": 50,
        "scaleInCooldown": 60,
        "scaleOutCooldown": 60,
        "healthCheckPath": "/",
        "timeout": 5,
        "healthyThresholdCount": 2,
        "interval": 10
      },
      "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": true,
      "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": true,
      "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": true,
      "@aws-cdk/aws-iam:minimizePolicies": true,
      "@aws-cdk/core:validateSnapshotRemovalPolicy": true,
      "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": true,
      "@aws-cdk/aws-s3:createDefaultLoggingPolicy": true,
      "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": true,
      "@aws-cdk/aws-apigateway:disableCloudWatchRole": true,
      "@aws-cdk/core:enablePartitionLiterals": true,
      "@aws-cdk/aws-events:eventsTargetQueueSameAccount": true,
      "@aws-cdk/aws-iam:standardizedServicePrincipals": true,
      "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": true,
      "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": true,
      "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": true,
      "@aws-cdk/aws-route53-patters:useCertificate": true,
      "@aws-cdk/customresources:installLatestAwsSdkDefault": false,
      "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": true,
      "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": true,
      "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": true,
      "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": true,
      "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": true,
      "@aws-cdk/aws-redshift:columnId": true,
      "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": true,
      "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": true,
      "@aws-cdk/aws-apigateway:requestValidatorUniqueId": true,
      "@aws-cdk/aws-kms:aliasNameRef": true,
      "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": true,
      "@aws-cdk/core:includePrefixInUniqueNameGeneration": true,
      "@aws-cdk/aws-efs:denyAnonymousAccess": true,
      "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": true,
      "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": true,
      "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": true,
      "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": true,
      "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": true,
      "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": true,
      "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": true
  }
}
